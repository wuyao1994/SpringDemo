<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
      
    <!--  Spring-Security 的配置 -->  
    <security:http auto-config="true" use-expressions="true" access-denied-page="/admin/denied" >  
          
        <!-- 对登录页面，所有的用户都可以访问 -->       
        <security:intercept-url pattern="/admin/login"  access="permitAll" />  
        
        <!-- 对所有的资源，都必须要有ROLE_ADMIN角色的用户 才可以访问 -->  
        <security:intercept-url pattern="/*"  access="hasRole('ROLE_ADMIN')" />  
        
        <security:form-login login-page="/admin/login" default-target-url="/admin/getAllUser" authentication-failure-url="/admin/error" />  
    </security:http>
    
    <!-- 指定一个自定义的authentication-manager :customUserDetailsService -->  
    <security:authentication-manager>  <!-- 权限管理者 -->
            <security:authentication-provider user-service-ref="customUserDetailsService">   <!-- 权限提供者 -->
            </security:authentication-provider>  
    </security:authentication-manager>  
      
    <!--
                通过 customUserDetailsService,Spring会自动的用户的访问级别.  
                也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.  
     -->
    <bean id="customUserDetailsService" class="admin.service.CustomUserDetailsService"/>  
</beans>